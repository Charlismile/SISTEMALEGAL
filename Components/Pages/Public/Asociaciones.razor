@* @page "/asociaciones" *@
@* @using SISTEMALEGAL.Models.DTOs *@
@* @using SISTEMALEGAL.Services.Interfaces *@
@* @inject IAsociacionRepository AsociacionRepo *@
@* @inject IJSRuntime JS *@
@* @inject NavigationManager NavManager *@
@* *@
@* <PageTitle>Listado de Asociaciones</PageTitle> *@
@* *@
@* <div class="container py-5"> *@
@*     <div class="d-flex justify-content-between align-items-center mb-4"> *@
@*         <h3 class="mb-0 text-primary">Listado de Asociaciones</h3> *@
@*         <a href="/registrar-asociacion" class="btn btn-success"> *@
@*             <i class="bi bi-plus-lg me-1"></i> Nueva Asociación *@
@*         </a> *@
@*     </div> *@
@* *@
@*     @if (asociaciones == null) *@
@*     { *@
@*         <div class="text-center text-muted"> *@
@*             <div class="spinner-border text-primary" role="status"></div> *@
@*             <p class="mt-3">Cargando datos...</p> *@
@*         </div> *@
@*     } *@
@*     else if (!asociaciones.Any()) *@
@*     { *@
@*         <div class="alert alert-info text-center">No hay asociaciones registradas aún.</div> *@
@*     } *@
@*     else *@
@*     { *@
@*         <div class="table-responsive"> *@
@*             <table class="table table-hover align-middle border shadow-sm rounded-3 overflow-hidden"> *@
@*                 <thead class="table-light"> *@
@*                     <tr> *@
@*                         <th>Nombre</th> *@
@*                         <th>Tomo / Folio / Asiento</th> *@
@*                         <th>Actividad de Salud</th> *@
@*                         <th>Creación</th> *@
@*                         <th class="text-center">Acciones</th> *@
@*                     </tr> *@
@*                 </thead> *@
@*                 <tbody> *@
@*                     @foreach (var item in asociaciones) *@
@*                     { *@
@*                         <tr> *@
@*                             <td>@item.Asociacion</td> *@
@*                             <td> *@
@*                                 <div class="small"> *@
@*                                     <div><strong>Tomo:</strong> @item.Tomo</div> *@
@*                                     <div><strong>Folio:</strong> @item.Folio</div> *@
@*                                     <div><strong>Asiento:</strong> @item.Asiento</div> *@
@*                                 </div> *@
@*                             </td> *@
@*                             <td>@item.ActividadSalud</td> *@
@*                             <td>@item.FechaCreacion?.ToShortDateString()</td> *@
@*                             <td class="text-center"> *@
@*                                 <div class="btn-group btn-group-sm"> *@
@*                                     <button class="btn btn-outline-primary" title="Ver" *@
@*                                             @onclick="() => VerDetalles(item.Id)"> *@
@*                                         <i class="bi bi-eye"></i> *@
@*                                     </button> *@
@*                                     <button class="btn btn-outline-secondary" title="Editar" *@
@*                                             @onclick="() => Editar(item.Id)"> *@
@*                                         <i class="bi bi-pencil"></i> *@
@*                                     </button> *@
@*                                     <button class="btn btn-outline-danger" title="Eliminar" *@
@*                                             @onclick="() => Eliminar(item.Id)"> *@
@*                                         <i class="bi bi-trash"></i> *@
@*                                     </button> *@
@*                                 </div> *@
@*                             </td> *@
@*                         </tr> *@
@*                     } *@
@*                 </tbody> *@
@*             </table> *@
@*         </div> *@
@*     } *@
@* </div> *@
@* *@
@* @code { *@
@*     private List<RegistroAsociacionDto> asociaciones = new(); *@
@* *@
@*     protected override async Task OnInitializedAsync() *@
@*     { *@
@*         asociaciones = await AsociacionRepo.GetAllAsync(); *@
@*     } *@
@* *@
@*     private void VerDetalles(int id) => NavManager.NavigateTo($"/asociacion/{id}"); *@
@*     private void Editar(int id) => NavManager.NavigateTo($"/editar-asociacion/{id}"); *@
@* *@
@*     private async Task Eliminar(int id) *@
@*     { *@
@*         bool confirmado = await JS.InvokeAsync<bool>("confirm", "¿Estás seguro de eliminar esta asociación?"); *@
@*         if (confirmado) *@
@*         { *@
@*             await AsociacionRepo.DeleteAsync(id); *@
@*             asociaciones.RemoveAll(a => a.Id == id); *@
@*             StateHasChanged(); *@
@*         } *@
@*     } *@
@* } *@
