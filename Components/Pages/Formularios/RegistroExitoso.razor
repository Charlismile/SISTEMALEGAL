@page "/registro-exitoso"
@inject NavigationManager Navigation

<PageTitle>Registro Exitoso</PageTitle>

<div class="container py-5 text-center">
    <div class="card border-success mx-auto" style="max-width: 600px;">
        <div class="card-header bg-success text-white">
            <h3><i class="bi bi-check-circle-fill me-2"></i>Registro Exitoso</h3>
        </div>
        <div class="card-body py-4">
            <i class="bi bi-check2-circle display-1 text-success mb-4"></i>
            <p class="lead">
                @if (tipoRegistro == "comite")
                {
                    <span>Comité registrado exitosamente</span>
                }
                else
                {
                    <span>Asociación registrada exitosamente</span>
                }
            </p>
            <p class="text-muted">Número de registro: <strong>@numeroRegistro</strong></p>
            
            <div class="mt-4 d-flex justify-content-center gap-3">
                <button class="btn btn-outline-success" @onclick="DescargarPDF">
                    <i class="bi bi-file-earmark-pdf me-2"></i>Descargar Certificado
                </button>
                <button class="btn btn-success" @onclick="VolverInicio">
                    <i class="bi bi-house-door me-2"></i>Volver al Inicio
                </button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] [SupplyParameterFromQuery] public string tipo { get; set; }
    [Parameter] [SupplyParameterFromQuery] public string id { get; set; }
    
    private string tipoRegistro;
    private string numeroRegistro;

    protected override void OnParametersSet()
    {
        tipoRegistro = tipo;
        // Aquí obtendrías el número de registro real desde la base de datos usando el ID
        numeroRegistro = $"{DateTime.Now.Year}-{new Random().Next(1000, 9999)}"; 
    }

    private void VolverInicio() => Navigation.NavigateTo("/");
    private void DescargarPDF()
    {
        // Lógica para generar PDF
    }
}